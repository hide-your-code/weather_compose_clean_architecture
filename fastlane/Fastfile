# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "koverHtmlReport")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play with internal testing"
  lane :deploy do
    gradle(
      task: "clean bundle",
      build_type: "Release",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
      }
    )
    upload_to_play_store(
      package_name: "com.minhdtm.example.weapose",
      track: "internal",
      json_key: ENV["ANDROID_JSON_KEY_FILE"],
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_changelogs: true,
      skip_upload_screenshots: true,
      skip_upload_images: true
    )
  end

  desc "Deploy a build to Firebase App Distribution"
    lane :distribute do
      gradle(
        task: "clean bundle",
        build_type: "Release",
        print_command: false,
          properties: {
            "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
            "android.injected.signing.store.password" => ENV["STORE_PASSWORD"],
            "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
            "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
          }
      )
      firebase_app_distribution(
        android_artifact_type: "AAB",
        app: ENV["FIREBASE_APP_ID"],
        firebase_cli_token: ENV["FIREBASE_TOKEN"],
        release_notes: "Lots of amazing new features to test out!"
      )
  end
end
